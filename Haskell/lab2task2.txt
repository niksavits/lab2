import Data.Char (digitToInt)

-- Функция для подсчета количества цифр в числе
количество_цифр :: Int -> Int
количество_цифр 0 = 0
количество_цифр n = 1 + количество_цифр (n `div` 10)

-- Функция для проверки числа на нечетное количество цифр
нечетное_количество_цифр :: Int -> Bool
нечетное_количество_цифр n = количество_цифр n `mod` 2 /= 0

-- Функция для подсчета чисел с нечетным количеством цифр в списке
подсчет_нечетных_цифр :: [Int] -> Int
подсчет_нечетных_цифр = length . filter нечетное_количество_цифр

main = do
    -- Запрашиваем количество элементов у пользователя
    putStrLn "Введите количество элементов:"
    -- Считываем ввод пользователя и преобразуем его в число
    n <- fmap read getLine :: IO Int

    -- Запрашиваем числа у пользователя
    putStrLn "Введите числа:"
    -- Считываем n чисел, введенных пользователем
    числа <- sequence $ replicate n (fmap read getLine :: IO Int)
    
    -- Подсчитываем количество чисел с нечетным количеством цифр
    let результат = подсчет_нечетных_цифр числа
    
    -- Выводим результат
    putStrLn $ "Количество чисел с нечетным количеством цифр: " ++ show результат
